/**
 * Copyright 2025 Â© BeeAI a Series of LF Projects, LLC
 * SPDX-License-Identifier: Apache-2.0
 */

$line-size: math.div(18, 14) * rem(14px);
$border-width: 1px;
$padding-top: rem(10px);
$padding-bottom: rem(10px);
$padding-inline: $spacing-05;

.root {
  /* easy way to plop the elements on top of each other and have them both sized based on the tallest one's height */
  display: grid;
  position: relative;

  &::after {
    /* Note the weird space! Needed to preventy jumpy behavior */
    content: attr(data-replicated-value) ' ';
    max-block-size: calc(
      (var(--max-rows) * var(--line-size, $line-size)) + (2 * var(--border-width, $border-width)) +
        var(--padding-top, $padding-top) + var(--padding-bottom, $padding-bottom)
    );

    /* This is how textarea text behaves */
    white-space: pre-wrap;

    /* Hidden from view, clicks, and screen readers */
    visibility: hidden;
  }

  > textarea {
    /* After user resizes, it ruins the auto sizing */
    resize: none;
    /* Hide FF scrollbar on growth */
    overflow: hidden;
    color: inherit;
    background-color: $background;
    outline: 2px solid transparent;
    outline-offset: -2px;
    transition: outline $duration-fast-01 motion(standard, productive);
    &::placeholder {
      color: $text-placeholder;
      transition: opacity $duration-fast-02;
    }
    &:focus-visible {
      outline: 2px solid $background-inverse;
      &::placeholder {
        opacity: 0.5;
      }
    }
    &:disabled {
      cursor: not-allowed;
      color: $text-disabled;
      background-color: $field;
    }
  }

  &::after,
  > textarea {
    /* Place on top of each other */
    grid-area: 1 / 1 / 2 / 2;

    @include type-style('body-compact-01');
    padding-block: var(--padding-top, $padding-top) var(--padding-bottom, $padding-bottom);
    padding-inline: var(--padding-inline, $padding-inline);
    border: var(--border-width, $border-width) solid $border-subtle;
    border-radius: $border-radius;
  }

  &.lg {
    --padding-top: #{rem(14px)};
    --padding-bottom: #{rem(14px)};
  }

  /* Turn off automatic resize feature after the height is manually modified */
  &.resized {
    &::after {
      display: none;
    }
  }
}

.resizeHandle {
  position: absolute;
  inset-block-end: 0;
  inset-inline-end: 0;
  z-index: 1;
  border: none;
  background-color: transparent;
  block-size: $spacing-05;
  inline-size: $spacing-05;
  padding: $spacing-02;
  display: flex;
  align-items: flex-end;
  gap: 1px;
  cursor: ns-resize;
  color: $text-secondary;

  .resizeHandleContent {
    display: flex;
    flex-direction: column;
    align-items: center;
    transform: rotate(-45deg);
    gap: 2px;
    &::after,
    &::before {
      content: '';
      display: block;
      inline-size: rem(12px);
      block-size: 1px;
      transform-origin: center;
      background-color: currentColor;
    }
    &::after {
      inline-size: rem(5px);
    }
  }
}
