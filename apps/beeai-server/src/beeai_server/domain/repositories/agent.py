# Copyright 2025 Â© BeeAI a Series of LF Projects, LLC
# SPDX-License-Identifier: Apache-2.0

from collections.abc import AsyncIterator
from datetime import timedelta
from typing import Protocol, runtime_checkable
from uuid import UUID

from beeai_server.domain.models.agent import Agent, AgentRunRequest


@runtime_checkable
class IAgentRepository(Protocol):
    async def bulk_create(self, agents: list[Agent]) -> None: ...
    async def get_agent(self, *, agent_id: UUID) -> Agent: ...
    async def list(self) -> AsyncIterator[Agent]:
        yield ...

    async def get_agent_by_name(self, *, name: str) -> Agent: ...
    async def create_request(self, *, request: AgentRunRequest) -> None: ...
    async def update_request(self, *, request: AgentRunRequest) -> None: ...
    async def delete_run(self, *, run_id: UUID) -> None: ...
    async def find_by_acp_run_id(self, *, run_id: UUID, user_id: UUID | None = None) -> Agent: ...
    async def find_by_acp_session_id(self, *, session_id: UUID, user_id: UUID | None = None) -> Agent: ...
    async def delete_requests_older_than(
        self, *, finished_threshold: timedelta, stale_threshold: timedelta | None = None
    ) -> int: ...
