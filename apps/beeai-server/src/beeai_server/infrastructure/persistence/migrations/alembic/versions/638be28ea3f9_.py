# Copyright 2025 Â© BeeAI a Series of LF Projects, LLC
# SPDX-License-Identifier: Apache-2.0

"""Add procrastinate initial migrations

Revision ID: 638be28ea3f9
Revises: be5ec6ff3271
Create Date: 2025-06-19 13:58:36.996259

"""

from collections.abc import Sequence
from pathlib import Path

import sqlparse
from alembic import op

from beeai_server import get_configuration

# revision identifiers, used by Alembic.
revision: str = "638be28ea3f9"
down_revision: str | None = "be5ec6ff3271"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    procrastinate_schema = get_configuration().persistence.procrastinate_schema
    op.execute(f"CREATE SCHEMA IF NOT EXISTS {procrastinate_schema}")

    # Create plpgsql extension, this changes search path in ibm cloud db, so we need to change it before and after
    op.execute(f"SET search_path TO {procrastinate_schema}")
    op.execute("CREATE EXTENSION IF NOT EXISTS plpgsql")
    op.execute(f"SET search_path TO {procrastinate_schema}")

    schema = (Path(__file__).parent / "procrastinate.sql").read_text("utf-8")
    for statement in sqlparse.split(schema):
        op.execute(statement)

    op.execute("SET search_path TO public")


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute(f"DROP SCHEMA IF EXISTS {get_configuration().persistence.procrastinate_schema} CASCADE")
