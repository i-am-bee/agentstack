# Copyright 2025 Â© BeeAI a Series of LF Projects, LLC
# SPDX-License-Identifier: Apache-2.0

"""empty message

Revision ID: 48ffed989775
Revises: f5d08cbe4ef8
Create Date: 2025-06-11 14:20:51.238473

"""

import uuid
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa

from beeai_server.utils.utils import utc_now

# revision identifiers, used by Alembic.
revision: str = "48ffed989775"
down_revision: Union[str, None] = "f5d08cbe4ef8"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None

user_role_enum = sa.Enum("admin", "user", name="userrole")


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    users_table = op.create_table(
        "users",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("email", sa.String(length=256), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("role", user_role_enum, nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
    )
    op.create_table(
        "files",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("filename", sa.String(length=256), nullable=False),
        sa.Column("file_size_bytes", sa.Integer(), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("created_by", sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(["created_by"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )

    # Create a dummy and an admin user to associate with existing agent requests
    dummy_user_id = uuid.uuid4()
    op.execute(
        sa.insert(users_table).values(id=dummy_user_id, email="user@beeai.dev", role="user", created_at=utc_now())
    )
    op.execute(
        sa.insert(users_table).values(id=uuid.uuid4(), email="admin@beeai.dev", role="admin", created_at=utc_now())
    )

    op.add_column("agent_requests", sa.Column("created_by", sa.UUID(), nullable=True))
    op.execute(f"UPDATE agent_requests SET created_by = '{dummy_user_id}'")
    op.alter_column("agent_requests", "created_by", nullable=False)

    op.create_foreign_key(None, "agent_requests", "users", ["created_by"], ["id"], ondelete="CASCADE")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint("agent_requests_created_by_fkey", "agent_requests", type_="foreignkey")
    op.drop_column("agent_requests", "created_by")
    op.drop_table("files")
    op.drop_table("users")
    user_role_enum.drop(op.get_bind())
    # ### end Alembic commands ###
