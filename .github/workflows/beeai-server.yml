name: BeeAI Server

on:
  push:
    tags:
      - "beeai-server-v*"

permissions:
  contents: read
  packages: write
  id-token: write

jobs:
  build-and-publish-pypi-and-docker:
    name: Build and publish to PyPI and Docker Hub
    runs-on: ubuntu-latest
    environment: release
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
      - id: version
        run: echo "version=${GITHUB_REF#refs/tags/beeai-server-v}" >> $GITHUB_OUTPUT

      # PyPI
      - run: mise beeai-server:build
      - uses: pypa/gh-action-pypi-publish@release/v1
        continue-on-error: true
        with:
          packages-dir: apps/beeai-server/dist

      # Docker
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/build-push-action@v6
        with:
          context: ./apps/beeai-server
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ghcr.io/${{ github.repository }}/beeai-server:${{ github.sha }}
            ghcr.io/${{ github.repository }}/beeai-server:${{ steps.version.outputs.version }}
            ghcr.io/${{ github.repository }}/beeai-server:latest

  build-and-push-helm-chart:
    # Inspired by: https://github.com/appany/helm-oci-chart-releaser
    runs-on: ubuntu-latest
    env: { HELM_EXPERIMENTAL_OCI: '1' }
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - uses: ./.github/actions/setup

      - name: Extract version from tag
        id: version
        run: echo "version=${GITHUB_REF#refs/tags/beeai-server-v}" >> $GITHUB_OUTPUT

      - name: Helm | login
        run: echo '${{ secrets.GITHUB_TOKEN }}' | helm registry login -u '${{ github.actor }}' --password-stdin ghcr.io

      - name: Helm | Lint
        run: mise run helm:check:lint

      - name: Helm | Package
        run: helm package helm/beeai-platform --version '${{ steps.version.outputs.version }}' --app-version ${{ steps.version.outputs.version }}

      - name: Helm | Push
        run: helm push 'beeai-platform-${{ steps.version.outputs.version }}.tgz' 'oci://ghcr.io/${{ github.repository }}/beeai-platform-chart'

  deploy-to-k8s:
    needs: build-and-publish-pypi-and-docker
    if: false
    runs-on: [ self-hosted ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: "latest" # Or specify a version, e.g., 'v1.29.2'
      - name: Deploy to Kubernetes
        run: |
          kubectl set image deployment/beeai-server beeai-server=ghcr.io/${{ github.repository }}/beeai-server:${{ github.sha }} -n ${{ secrets.CLUSTER_NAMESPACE }}
          kubectl rollout status deployment/beeai-server --timeout 5m -n ${{ secrets.CLUSTER_NAMESPACE }}
